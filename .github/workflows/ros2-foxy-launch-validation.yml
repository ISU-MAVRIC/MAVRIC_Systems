# This Workflow can be easily modified once we move to ROS2 Jazzy
name: ROS2 Foxy Build and Launch Validation

on:
  pull_request:
  push:
    branches: [main]

jobs:
  # Job to determine if we should run the build based on changed files
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.filter.outputs.ros2 }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for relevant changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            ros2:
              - 'ros2_ws_Foxy/**'
              - '.devcontainer/*' # Include root devcontainer changes that affect ROS2 environment

  build-and-launch:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.should-run == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Ensure cache directory exists
        run: mkdir -p /tmp/devcontainer-cache

      - name: Cache dev container layers
        id: cache
        uses: actions/cache@v4
        with:
          path: /tmp/devcontainer-cache
          key: ${{ runner.os }}-devcontainer-${{ hashFiles('.devcontainer/devcontainer.json', '.devcontainer/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-devcontainer-

      - name: Build and Test in Dev Container
        uses: devcontainers/ci@v0.3
        with:
          push: never
          cacheFrom: type=local,src=/tmp/devcontainer-cache
          cacheTo: type=local,dest=/tmp/devcontainer-cache-new,mode=max
          runCmd: |
            set -e
            cd /workspaces/MAVRIC_Systems/ros2_ws_Foxy
            echo "Building ROS2 Workspace..."
            colcon build --symlink-install

            echo "Finding and Testing Launch Files..."
            source install/setup.bash
            find src -name "*.launch.py" | while read launch_file; do
              package_name=$(echo $launch_file | cut -d/ -f2)
              launch_file_name=$(basename $launch_file)
              echo "Attempting to launch $package_name $launch_file_name"
              ros2 launch $package_name $launch_file_name &
              pid=$!
              sleep 15
              if ps -p $pid > /dev/null; then
                echo "Launch file $package_name $launch_file_name is still running after 15s. Success."
                kill $pid
              else
                echo "Launch file $package_name $launch_file_name exited prematurely."
                wait $pid
                exit_code=$?
                if [ $exit_code -ne 0 ]; then
                  echo "::error::Launch file $package_name $launch_file_name failed with exit code $exit_code"
                  exit 1
                else
                  echo "Launch file $package_name $launch_file_name exited cleanly before timeout."
                fi
              fi
            done

      - name: Move cache
        if: always()
        run: |
          echo "Moving cache from temporary location to final location"
          rm -rf /tmp/devcontainer-cache
          if [ -d /tmp/devcontainer-cache-new ]; then 
            mv /tmp/devcontainer-cache-new /tmp/devcontainer-cache
            echo "✅ Cache moved successfully"
          else
            echo "⚠️  No new cache found"
          fi

  # This job always runs and provides the required status check
  status-check:
    runs-on: ubuntu-latest
    needs: [check-changes, build-and-launch]
    if: always()
    steps:
      - name: Determine overall status
        run: |
          echo "Check changes result: ${{ needs.check-changes.outputs.should-run }}"
          echo "Build and launch result: ${{ needs.build-and-launch.result }}"
          
          # If changes were detected but build failed, fail this check
          if [[ "${{ needs.check-changes.outputs.should-run }}" == "true" && "${{ needs.build-and-launch.result }}" != "success" ]]; then
            echo "❌ ROS2 Foxy build or launch validation failed"
            exit 1
          fi
          
          # If no changes detected, skip is acceptable
          if [[ "${{ needs.check-changes.outputs.should-run }}" == "false" ]]; then
            echo "✅ No ROS2 Foxy changes detected - skipping validation"
            exit 0
          fi
          
          # Otherwise, build succeeded
          echo "✅ ROS2 Foxy build and launch validation passed"
